# GatewayClass (defines implementation)
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass # giving red underline since no Gateway API CRD is installed, so in this we can ignore
metadata:
  name: nginx
spec:
  controllerName: k8s.io/nginx
---
# Gateway (actual entry point)
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: my-gateway
  namespace: default
spec:
  gatewayClassName: nginx
  listeners:
  - name: http
    protocol: HTTP
    port: 80
    allowedRoutes:
      namespaces:
        from: Same
  - name: https
    protocol: HTTPS
    port: 443
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        name: tls-secret
    allowedRoutes:
      namespaces:
        from: Same
---
# HTTPRoute (routing rules)
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: my-route
  namespace: default
spec:
  parentRefs:
  - name: my-gateway
  hostnames:
  - "path4cloud.gw"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /app
    backendRefs:
    - name: webapp-service-v1
      port: 80
      weight: 30 # if have canary depoyment and wanted to split the traffic then put this, with defined weightage and remaining to another service
    - name: webapp-service-v2
      port: 80
      weight: 20
